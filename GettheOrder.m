function [Database,Order]=GettheOrder(Database,FindingTable)
l=length(FindingTable);
k=length(Database);
ok=ones(k,1);
for i=1:l
    NumofFigure=find(strcmp({Database.Figure},FindingTable{i,1})==1);
    NumofCondition=find(cell2mat({Database.Condition})==FindingTable{i,2});
    NumforCondition=intersect(NumofFigure,NumofCondition);
    ok(NumforCondition,1)=0;
    Result=cell2mat({Database(NumforCondition).Result});
    Num={Database(NumforCondition).Num};
    [output,order]=sort(Result,'descend');
    Table(1,:)=num2cell(output);
    Table(2,:)=Num(1,order);
    score=1-[0:length(order)-1]/length(order);
    TopL=output(1);
    if(FindingTable{i,3}==1)
        if(TopL<Order(i-1).LowerL)
            score=score*0.24;
            TopL=Order(i-1).TopL;
            UpperL=Order(i-1).UpperL;
            MedianL=Order(i-1).MedianL;
            LowerL=Order(i-1).LowerL;
        elseif(TopL<Order(i-1).MedianL)
            score=score*0.49;
            TopL=Order(i-1).TopL;
            UpperL=Order(i-1).UpperL;
            MedianL=Order(i-1).MedianL;
            if(~isempty(find(score==0.25)))
                if(output(find(score==0.25))>Order(i-1).LowerL)
                    LowerL=output(find(score==0.25));
                else
                    LowerL=Order(i-1).LowerL;
                    score(find(output<LowerL))=score(find(output<LowerL))/max(score(find(output<LowerL)))*0.24;
                end
            else
                FR=find(score>0.25);
                if((output(FR(end)+1)+output(FR(end)))/2>Order(i-1).LowerL)
                    LowerL=(output(FR(end)+1)+output(FR(end)))/2;
                else
                    LowerL=Order(i-1).LowerL;
                    score(find(output<LowerL))=score(find(output<LowerL))/max(score(find(output<LowerL)))*0.24;
                end
            end
        elseif(TopL<Order(i-1).UpperL)
            score=score*0.74;
            TopL=Order(i-1).TopL;
            UpperL=Order(i-1).UpperL;
            if(~isempty(find(score==0.5)))
                if(output(find(score==0.5))>Order(i-1).MedianL)
                    MedianL=output(find(score==0.5));
                else
                    MedianL=Order(i-1).MedianL;
                    score(find(output<MedianL))=score(find(output<MedianL))/max(score(find(output<MedianL)))*0.49;
                end
            else
                FR=find(score>0.5);
                if((output(FR(end)+1)+output(FR(end)))/2>Order(i-1).MedianL)
                    MedianL=(output(FR(end)+1)+output(FR(end)))/2;
                else
                    MedianL=Order(i-1).MedianL;
                    score(find(output<MedianL))=score(find(output<MedianL))/max(score(find(output<MedianL)))*0.49;
                end
            end
            if(~isempty(find(score==0.25)))
                if(output(find(score==0.25))>Order(i-1).LowerL)
                    LowerL=output(find(score==0.25));
                else
                    LowerL=Order(i-1).LowerL;
                    score(find(output<LowerL))=score(find(output<LowerL))/max(score(find(output<LowerL)))*0.24;
                end
            else
                FR=find(score>0.25);
                if((output(FR(end)+1)+output(FR(end)))/2>Order(i-1).LowerL)
                    LowerL=(output(FR(end)+1)+output(FR(end)))/2;
                else
                    LowerL=Order(i-1).LowerL;
                    score(find(output<LowerL))=score(find(output<LowerL))/max(score(find(output<LowerL)))*0.24;
                end
            end
        elseif(TopL<Order(i-1).TopL)
            score=score*0.9;
            TopL=Order(i-1).TopL;
            if(~isempty(find(score==0.75)))
                if(output(find(score==0.75))>Order(i-1).UpperL)
                    UpperL=output(find(score==0.75));
                else
                    UpperL=Order(i-1).UpperL;
                    score(find(output<UpperL))=score(find(output<UpperL))/max(score(find(output<UpperL)))*0.74;
                end
            else
                FR=find(score>0.75);
                if((output(FR(end)+1)+output(FR(end)))/2>Order(i-1).UpperL)
                    UpperL=(output(FR(end)+1)+output(FR(end)))/2;
                else
                    UpperL=Order(i-1).UpperL;
                    score(find(output<UpperL))=score(find(output<UpperL))/max(score(find(output<UpperL)))*0.74;
                end
            end
            if(~isempty(find(score==0.5)))
                if(output(find(score==0.5))>Order(i-1).MedianL)
                    MedianL=output(find(score==0.5));
                else
                    MedianL=Order(i-1).MedianL;
                    score(find(output<MedianL))=score(find(output<MedianL))/max(score(find(output<MedianL)))*0.49;
                end
            else
                FR=find(score>0.5);
                if((output(FR(end)+1)+output(FR(end)))/2>Order(i-1).MedianL)
                    MedianL=(output(FR(end)+1)+output(FR(end)))/2;
                else
                    MedianL=Order(i-1).MedianL;
                    score(find(output<MedianL))=score(find(output<MedianL))/max(score(find(output<MedianL)))*0.49;
                end
            end
            if(~isempty(find(score==0.25)))
                if(output(find(score==0.25))>Order(i-1).LowerL)
                    LowerL=output(find(score==0.25));
                else
                    LowerL=Order(i-1).LowerL;
                    score(find(output<LowerL))=score(find(output<LowerL))/max(score(find(output<LowerL)))*0.24;
                end
            else
                FR=find(score>0.25);
                if((output(FR(end)+1)+output(FR(end)))/2>Order(i-1).LowerL)
                    LowerL=(output(FR(end)+1)+output(FR(end)))/2;
                else
                    LowerL=Order(i-1).LowerL;
                    score(find(output<LowerL))=score(find(output<LowerL))/max(score(find(output<LowerL)))*0.24;
                end
            end
        else
            TopL=output(1);
            if(~isempty(find(score==0.75)))
                if(output(find(score==0.75))>Order(i-1).UpperL)
                    UpperL=output(find(score==0.75));
                else
                    UpperL=Order(i-1).UpperL;
                    score(find(output<UpperL))=score(find(output<UpperL))/max(score(find(output<UpperL)))*0.74;
                end
            else
                FR=find(score>0.75);
                if((output(FR(end)+1)+output(FR(end)))/2>Order(i-1).UpperL)
                    UpperL=(output(FR(end)+1)+output(FR(end)))/2;
                else
                    UpperL=Order(i-1).UpperL;
                    score(find(output<UpperL))=score(find(output<UpperL))/max(score(find(output<UpperL)))*0.74;
                end
            end
            if(~isempty(find(score==0.5)))
                if(output(find(score==0.5))>Order(i-1).MedianL)
                    MedianL=output(find(score==0.5));
                else
                    MedianL=Order(i-1).MedianL;
                    score(find(output<MedianL))=score(find(output<MedianL))/max(score(find(output<MedianL)))*0.49;
                end
            else
                FR=find(score>0.5);
                if((output(FR(end)+1)+output(FR(end)))/2>Order(i-1).MedianL)
                    MedianL=(output(FR(end)+1)+output(FR(end)))/2;
                else
                    MedianL=Order(i-1).MedianL;
                    score(find(output<MedianL))=score(find(output<MedianL))/max(score(find(output<MedianL)))*0.49;
                end
            end
            if(~isempty(find(score==0.25)))
                if(output(find(score==0.25))>Order(i-1).LowerL)
                    LowerL=output(find(score==0.25));
                else
                    LowerL=Order(i-1).LowerL;
                    score(find(output<LowerL))=score(find(output<LowerL))/max(score(find(output<LowerL)))*0.24;
                end
            else
                FR=find(score>0.25);
                if((output(FR(end)+1)+output(FR(end)))/2>Order(i-1).LowerL)
                    LowerL=(output(FR(end)+1)+output(FR(end)))/2;
                else
                    LowerL=Order(i-1).LowerL;
                    score(find(output<LowerL))=score(find(output<LowerL))/max(score(find(output<LowerL)))*0.24;
                end
            end
        end
    else
        TopL=output(1);
        if(~isempty(find(score==0.75)))
            UpperL=output(find(score==0.75));
        else
            FR=find(score>0.75);
            UpperL=(output(FR(end)+1)+output(FR(end)))/2;
        end
        if(~isempty(find(score==0.5)))
            MedianL=output(find(score==0.5));
        else
            FR=find(score>0.5);
            MedianL=(output(FR(end)+1)+output(FR(end)))/2;
        end
        if(~isempty(find(score==0.25)))
            LowerL=output(find(score==0.25));
        else
            FR=find(score>0.25);
            LowerL=(output(FR(end)+1)+output(FR(end)))/2;
        end
    end
    Table(3,:)=num2cell(score);
    Table(4,:)=num2cell(NumforCondition(order));
    DDD=Table(3,:);
    [Database(NumforCondition(order)).Score]=deal(DDD{:});
    if(FindingTable{i,4}==1)
        [Database(NumforCondition(order)).SmallScore]=deal(DDD{:});
    end
    if(FindingTable{i,4}==3)
        [Database(NumforCondition(order)).LargeScore]=deal(DDD{:});
    end
    Order(i).Figure=FindingTable{i,1};
    Order(i).Condition=FindingTable{i,2};
    Order(i).Table=Table;
    Order(i).TopL=TopL;
    Order(i).UpperL=UpperL;
    Order(i).MedianL=MedianL;
    Order(i).LowerL=LowerL;
    clearvars Table
end
% Order(l+1).Table=ok;
%%底线/顶线分数修正
ALLFIGURE={'IP','UP','SV','HST','KSC','BSW','DC','CP'};
Finding{1}=cell2mat([{0.01},   {0.03}, {0.05}, {0.1},  {0.15}, {5},    {10},   {15},   {50},   {200}]);
Finding{2}=cell2mat([{0.01},  {0.05}, {0.1},  {0},    {5},    {10},   {15},   {20},   {30},   {40},   {50},   {100},  {200}]);
Finding{3}=cell2mat([{0.01},  {0.05}, {0.1},  {5},    {10},   {20},   {50},   {200}]);
for i=1:3
    NumofFigure = find(strcmp({Database.Figure},ALLFIGURE{i})==1);
    ConditionofFigure=unique(cell2mat({Database(NumofFigure).Condition}));
    for j=1:length(NumofFigure)
        Condition=Database(NumofFigure(j)).Condition;
        if(Condition>1)
            NF=find(Finding{i}>Condition);
            if(~isempty(NF))
                NOF=find(strcmp({Order.Figure},ALLFIGURE{i})==1);
                NOC=find(cell2mat({Order.Condition})==Finding{i}(NF(1)));
                NFC=intersect(NOF,NOC);
                NextResult=cell2mat(Order(NFC).Table(1,:));
                NextScore=cell2mat(Order(NFC).Table(3,:));
                RF=find(NextResult<Database(NumofFigure(j)).Result);
                if(~isempty(RF))
                    if(isempty(Database(NumofFigure(j)).Score))
                        if(Finding{i}(NF(1))<=Condition*1.34)
                        Database(NumofFigure(j)).Score=NextScore(RF(1))*Finding{i}(NF(1))/Condition;
                        if(Database(NumofFigure(j)).Score>1)
                            Database(NumofFigure(j)).Score=1;
                        end
                        end
                    end
                        if(Database(NumofFigure(j)).Score<NextScore(RF(1)))
                        Database(NumofFigure(j)).Score=NextScore(RF(1));
                    end
                end
            end
        end
        if((Condition<1)&&(Condition>0))
            NF=find(Finding{i}>Condition);
            if(~isempty(NF))
                if(Finding{i}(NF(1))<1)
                    NOF=find(strcmp({Order.Figure},ALLFIGURE{i})==1);
                    NOC=find(cell2mat({Order.Condition})==Finding{i}(NF(1)));
                    NFC=intersect(NOF,NOC);
                    NextResult=cell2mat(Order(NFC).Table(1,:));
                    NextScore=cell2mat(Order(NFC).Table(3,:));
                    RF=find(NextResult<Database(NumofFigure(j)).Result);
                    if(~isempty(RF))
                        if(isempty(Database(NumofFigure(j)).Score))
                            if(Finding{i}(NF(1))<=Condition*1.34)
                            Database(NumofFigure(j)).Score=NextScore(RF(1))*Finding{i}(NF(1))/Condition;
                        if(Database(NumofFigure(j)).Score>1)
                            Database(NumofFigure(j)).Score=1;
                        end
                            end
                        end
                            if(Database(NumofFigure(j)).Score<NextScore(RF(1)))
                            Database(NumofFigure(j)).Score=NextScore(RF(1));
                        end
                    end
                end
            end   
        end
        
        
        
    end
end
%%重新写入Order

for i=1:l
    NumofFigure=find(strcmp({Database.Figure},FindingTable{i,1})==1);
    NumofCondition=find(cell2mat({Database.Condition})==FindingTable{i,2});
    NumforCondition=intersect(NumofFigure,NumofCondition);
    ok(NumforCondition,1)=0;
    Result=cell2mat({Database(NumforCondition).Result});
    Num={Database(NumforCondition).Num};
    Score={Database(NumforCondition).Score};
    [output,order]=sort(Result,'descend');
    Table(1,:)=num2cell(output);
    Table(2,:)=Num(1,order);
    Table(3,:)=Score(order);
    Table(4,:)=num2cell(NumforCondition(order));
    DDD=Table(3,:);
    [Database(NumforCondition(order)).Score]=deal(DDD{:});
    if(FindingTable{i,4}==1)
        [Database(NumforCondition(order)).SmallScore]=deal(DDD{:});
    end
    if(FindingTable{i,4}==3)
        [Database(NumforCondition(order)).LargeScore]=deal(DDD{:});
    end
    Order(i).Table=Table;
    clearvars Table
end

for i=1:l
    for j=2:length(Order(i).Table)
        if(Order(i).Table{3,j}>=Order(i).Table{3,j-1})
            if(Order(i).Table{1,j}~=Order(i).Table{1,j-1})
                FR1=find(cell2mat(Order(i).Table(1,:))<Order(i).Table{1,j});
                FR2=find(cell2mat(Order(i).Table(3,:))~=Order(i).Table{3,j});
                FR=intersect(FR1,FR2);
                if(isempty(FR))
                    Order(i).Table{3,j}=Order(i).Table{3,j-1}/2;
                else
                    Order(i).Table{3,j}=(Order(i).Table{3,j-1}+Order(i).Table{3,FR(1)})/2;
                end
                
            end
        end
        if(Order(i).Table{1,j}==Order(i).Table{1,j-1})
            Order(i).Table{3,j}=Order(i).Table{3,j-1};
        end
    end
    NumofFigure=find(strcmp({Database.Figure},FindingTable{i,1})==1);
    NumofCondition=find(cell2mat({Database.Condition})==FindingTable{i,2});
    NumforCondition=intersect(NumofFigure,NumofCondition);
    ok(NumforCondition,1)=0;
    Result=cell2mat({Database(NumforCondition).Result});
    Num={Database(NumforCondition).Num};
    Score={Database(NumforCondition).Score};
    [output,order]=sort(Result,'descend');
    Table=Order(i).Table;
    DDD=Table(3,:);
    [Database(NumforCondition(order)).Score]=deal(DDD{:});
    if(FindingTable{i,4}==1)
        [Database(NumforCondition(order)).SmallScore]=deal(DDD{:});
    end
    if(FindingTable{i,4}==3)
        [Database(NumforCondition(order)).LargeScore]=deal(DDD{:});
    end
    clearvars Table
end

for i=1:3
    NumofFigure = find(strcmp({Database.Figure},ALLFIGURE{i})==1);
    ConditionofFigure=unique(cell2mat({Database(NumofFigure).Condition}));
    for j=1:length(NumofFigure)
        Condition=Database(NumofFigure(j)).Condition;
        if(Condition>1)
            NF=find(Finding{i}<Condition);
            if(~isempty(NF))
                if(Finding{i}(NF(end))>1)
                    NOF=find(strcmp({Order.Figure},ALLFIGURE{i})==1);
                    NOC=find(cell2mat({Order.Condition})==Finding{i}(NF(end)));
                    NFC=intersect(NOF,NOC);
                    LastResult=cell2mat(Order(NFC).Table(1,:));
                    LastScore=cell2mat(Order(NFC).Table(3,:));
                    RF=find(LastResult>Database(NumofFigure(j)).Result);
                    if(~isempty(RF))
                        if(~isempty(Database(NumofFigure(j)).Score))
                            if(Database(NumofFigure(j)).Score>LastScore(RF(end)))
                                Database(NumofFigure(j)).Score=LastScore(RF(end));
                            end
                        end
                        if(RF(end)==length(LastResult))
                            Database(NumofFigure(j)).Score=0;
                        end
                        
                    end
                end
            end
        end
        if((Condition<1)&&(Condition>0))
            NF=find(Finding{i}<Condition);
            if(~isempty(NF))
                if(Finding{i}(NF(end))>0)
                    NOF=find(strcmp({Order.Figure},ALLFIGURE{i})==1);
                    NOC=find(cell2mat({Order.Condition})==Finding{i}(NF(end)));
                    NFC=intersect(NOF,NOC);
                    LastResult=cell2mat(Order(NFC).Table(1,:));
                    LastScore=cell2mat(Order(NFC).Table(3,:));
                    RF=find(LastResult>Database(NumofFigure(j)).Result);
                    if(~isempty(RF))
                        if(~isempty(Database(NumofFigure(j)).Score))
                            if(Database(NumofFigure(j)).Score>LastScore(RF(end)))
                                Database(NumofFigure(j)).Score=LastScore(RF(end));
                            end
                        end
                        if(RF(end)==length(LastResult))
                            Database(NumofFigure(j)).Score=0;
                        end
                    end
                end
            end
            
            
            
            
        end
        
        
        
    end
end
for i=1:l
    NumofFigure=find(strcmp({Database.Figure},FindingTable{i,1})==1);
    NumofCondition=find(cell2mat({Database.Condition})==FindingTable{i,2});
    NumforCondition=intersect(NumofFigure,NumofCondition);
    ok(NumforCondition,1)=0;
    Result=cell2mat({Database(NumforCondition).Result});
    Num={Database(NumforCondition).Num};
    Score={Database(NumforCondition).Score};
    [output,order]=sort(Result,'descend');
    Table(1,:)=num2cell(output);
    Table(2,:)=Num(1,order);
    Table(3,:)=Score(order);
    Table(4,:)=num2cell(NumforCondition(order));
    DDD=Table(3,:);
    [Database(NumforCondition(order)).Score]=deal(DDD{:});
    if(FindingTable{i,4}==1)
        [Database(NumforCondition(order)).SmallScore]=deal(DDD{:});
    end
    if(FindingTable{i,4}==3)
        [Database(NumforCondition(order)).LargeScore]=deal(DDD{:});
    end
    Order(i).Table=Table;
    clearvars Table
end


end